import {z} from 'zod'

export const PicSchema = z.object({
  seo_category_infos: z.array(z.array(z.string())),
  logging_page_id: z.string(),
  show_suggested_profiles: z.boolean(),
  show_follow_dialog: z.boolean(),
  graphql: z.object({
    user: z.object({
      biography: z.string(),
      blocked_by_viewer: z.boolean(),
      restricted_by_viewer: z.boolean(),
      country_block: z.boolean(),
      external_url: z.string(),
      external_url_linkshimmed: z.string(),
      edge_followed_by: z.object({count: z.number()}),
      fbid: z.string(),
      followed_by_viewer: z.boolean(),
      edge_follow: z.object({count: z.number()}),
      follows_viewer: z.boolean(),
      full_name: z.string(),
      has_ar_effects: z.boolean(),
      has_clips: z.boolean(),
      has_guides: z.boolean(),
      has_channel: z.boolean(),
      has_blocked_viewer: z.boolean(),
      highlight_reel_count: z.number(),
      has_requested_viewer: z.boolean(),
      hide_like_and_view_counts: z.boolean(),
      id: z.string(),
      is_business_account: z.boolean(),
      is_professional_account: z.boolean(),
      is_embeds_disabled: z.boolean(),
      is_joined_recently: z.boolean(),
      business_address_json: z.null(),
      business_contact_method: z.string(),
      business_email: z.null(),
      business_phone_number: z.null(),
      business_category_name: z.null(),
      overall_category_name: z.null(),
      category_enum: z.null(),
      category_name: z.string(),
      is_private: z.boolean(),
      is_verified: z.boolean(),
      edge_mutual_followed_by: z.object({
        count: z.number(),
        edges: z.array(z.object({node: z.object({username: z.string()})})),
      }),
      profile_pic_url: z.string(),
      profile_pic_url_hd: z.string(),
      requested_by_viewer: z.boolean(),
      should_show_category: z.boolean(),
      should_show_public_contacts: z.boolean(),
      username: z.string(),
      connected_fb_page: z.null(),
      pronouns: z.array(z.unknown()),
      edge_felix_video_timeline: z.object({
        count: z.number(),
        page_info: z.object({
          has_next_page: z.boolean(),
          end_cursor: z.string(),
        }),
        edges: z.array(
          z.union([
            z.object({
              node: z.object({
                __typename: z.string(),
                id: z.string(),
                shortcode: z.string(),
                dimensions: z.object({height: z.number(), width: z.number()}),
                display_url: z.string(),
                edge_media_to_tagged_user: z.object({
                  edges: z.array(z.unknown()),
                }),
                fact_check_overall_rating: z.null(),
                fact_check_information: z.null(),
                gating_info: z.null(),
                sharing_friction_info: z.object({
                  should_have_sharing_friction: z.boolean(),
                  bloks_app_url: z.null(),
                }),
                media_overlay_info: z.null(),
                media_preview: z.string(),
                owner: z.object({id: z.string(), username: z.string()}),
                is_video: z.boolean(),
                has_upcoming_event: z.boolean(),
                accessibility_caption: z.null(),
                dash_info: z.object({
                  is_dash_eligible: z.boolean(),
                  video_dash_manifest: z.string(),
                  number_of_qualities: z.number(),
                }),
                has_audio: z.boolean(),
                tracking_token: z.string(),
                video_url: z.string(),
                video_view_count: z.number(),
                edge_media_to_caption: z.object({
                  edges: z.array(
                    z.object({node: z.object({text: z.string()})}),
                  ),
                }),
                edge_media_to_comment: z.object({count: z.number()}),
                comments_disabled: z.boolean(),
                taken_at_timestamp: z.number(),
                edge_liked_by: z.object({count: z.number()}),
                edge_media_preview_like: z.object({count: z.number()}),
                location: z.null(),
                thumbnail_src: z.string(),
                thumbnail_resources: z.array(
                  z.object({
                    src: z.string(),
                    config_width: z.number(),
                    config_height: z.number(),
                  }),
                ),
                felix_profile_grid_crop: z.null(),
                coauthor_producers: z.array(z.unknown()),
                encoding_status: z.null(),
                is_published: z.boolean(),
                product_type: z.string(),
                title: z.string(),
                video_duration: z.number(),
              }),
            }),
            z.object({
              node: z.object({
                __typename: z.string(),
                id: z.string(),
                shortcode: z.string(),
                dimensions: z.object({height: z.number(), width: z.number()}),
                display_url: z.string(),
                edge_media_to_tagged_user: z.object({
                  edges: z.array(z.unknown()),
                }),
                fact_check_overall_rating: z.null(),
                fact_check_information: z.null(),
                gating_info: z.null(),
                sharing_friction_info: z.object({
                  should_have_sharing_friction: z.boolean(),
                  bloks_app_url: z.null(),
                }),
                media_overlay_info: z.null(),
                media_preview: z.string(),
                owner: z.object({id: z.string(), username: z.string()}),
                is_video: z.boolean(),
                has_upcoming_event: z.boolean(),
                accessibility_caption: z.null(),
                dash_info: z.object({
                  is_dash_eligible: z.boolean(),
                  video_dash_manifest: z.string(),
                  number_of_qualities: z.number(),
                }),
                has_audio: z.boolean(),
                tracking_token: z.string(),
                video_url: z.string(),
                video_view_count: z.number(),
                edge_media_to_caption: z.object({
                  edges: z.array(
                    z.object({node: z.object({text: z.string()})}),
                  ),
                }),
                edge_media_to_comment: z.object({count: z.number()}),
                comments_disabled: z.boolean(),
                taken_at_timestamp: z.number(),
                edge_liked_by: z.object({count: z.number()}),
                edge_media_preview_like: z.object({count: z.number()}),
                location: z.null(),
                thumbnail_src: z.string(),
                thumbnail_resources: z.array(
                  z.object({
                    src: z.string(),
                    config_width: z.number(),
                    config_height: z.number(),
                  }),
                ),
                felix_profile_grid_crop: z.object({
                  crop_left: z.number(),
                  crop_right: z.number(),
                  crop_top: z.number(),
                  crop_bottom: z.number(),
                }),
                coauthor_producers: z.array(z.unknown()),
                encoding_status: z.null(),
                is_published: z.boolean(),
                product_type: z.string(),
                title: z.string(),
                video_duration: z.number(),
              }),
            }),
          ]),
        ),
      }),
      edge_owner_to_timeline_media: z.object({
        count: z.number(),
        page_info: z.object({
          has_next_page: z.boolean(),
          end_cursor: z.string(),
        }),
        edges: z.array(
          z.union([
            z.object({
              node: z.object({
                __typename: z.string(),
                id: z.string(),
                shortcode: z.string(),
                dimensions: z.object({height: z.number(), width: z.number()}),
                display_url: z.string(),
                edge_media_to_tagged_user: z.object({
                  edges: z.array(z.unknown()),
                }),
                fact_check_overall_rating: z.null(),
                fact_check_information: z.null(),
                gating_info: z.null(),
                sharing_friction_info: z.object({
                  should_have_sharing_friction: z.boolean(),
                  bloks_app_url: z.null(),
                }),
                media_overlay_info: z.null(),
                media_preview: z.null(),
                owner: z.object({id: z.string(), username: z.string()}),
                is_video: z.boolean(),
                has_upcoming_event: z.boolean(),
                accessibility_caption: z.string(),
                edge_media_to_caption: z.object({
                  edges: z.array(
                    z.object({node: z.object({text: z.string()})}),
                  ),
                }),
                edge_media_to_comment: z.object({count: z.number()}),
                comments_disabled: z.boolean(),
                taken_at_timestamp: z.number(),
                edge_liked_by: z.object({count: z.number()}),
                edge_media_preview_like: z.object({count: z.number()}),
                location: z.object({
                  id: z.string(),
                  has_public_page: z.boolean(),
                  name: z.string(),
                  slug: z.string(),
                }),
                thumbnail_src: z.string(),
                thumbnail_resources: z.array(
                  z.object({
                    src: z.string(),
                    config_width: z.number(),
                    config_height: z.number(),
                  }),
                ),
                coauthor_producers: z.array(z.unknown()),
                edge_sidecar_to_children: z.object({
                  edges: z.array(
                    z.union([
                      z.object({
                        node: z.object({
                          __typename: z.string(),
                          id: z.string(),
                          shortcode: z.string(),
                          dimensions: z.object({
                            height: z.number(),
                            width: z.number(),
                          }),
                          display_url: z.string(),
                          edge_media_to_tagged_user: z.object({
                            edges: z.array(z.unknown()),
                          }),
                          fact_check_overall_rating: z.null(),
                          fact_check_information: z.null(),
                          gating_info: z.null(),
                          sharing_friction_info: z.object({
                            should_have_sharing_friction: z.boolean(),
                            bloks_app_url: z.null(),
                          }),
                          media_overlay_info: z.null(),
                          media_preview: z.string(),
                          owner: z.object({
                            id: z.string(),
                            username: z.string(),
                          }),
                          is_video: z.boolean(),
                          has_upcoming_event: z.boolean(),
                          accessibility_caption: z.string(),
                        }),
                      }),
                      z.object({
                        node: z.object({
                          __typename: z.string(),
                          id: z.string(),
                          shortcode: z.string(),
                          dimensions: z.object({
                            height: z.number(),
                            width: z.number(),
                          }),
                          display_url: z.string(),
                          edge_media_to_tagged_user: z.object({
                            edges: z.array(z.unknown()),
                          }),
                          fact_check_overall_rating: z.null(),
                          fact_check_information: z.null(),
                          gating_info: z.null(),
                          sharing_friction_info: z.object({
                            should_have_sharing_friction: z.boolean(),
                            bloks_app_url: z.null(),
                          }),
                          media_overlay_info: z.null(),
                          media_preview: z.null(),
                          owner: z.object({
                            id: z.string(),
                            username: z.string(),
                          }),
                          is_video: z.boolean(),
                          has_upcoming_event: z.boolean(),
                          accessibility_caption: z.string(),
                        }),
                      }),
                    ]),
                  ),
                }),
              }),
            }),
            z.object({
              node: z.object({
                __typename: z.string(),
                id: z.string(),
                shortcode: z.string(),
                dimensions: z.object({height: z.number(), width: z.number()}),
                display_url: z.string(),
                edge_media_to_tagged_user: z.object({
                  edges: z.array(z.unknown()),
                }),
                fact_check_overall_rating: z.null(),
                fact_check_information: z.null(),
                gating_info: z.null(),
                sharing_friction_info: z.object({
                  should_have_sharing_friction: z.boolean(),
                  bloks_app_url: z.null(),
                }),
                media_overlay_info: z.null(),
                media_preview: z.null(),
                owner: z.object({id: z.string(), username: z.string()}),
                is_video: z.boolean(),
                has_upcoming_event: z.boolean(),
                accessibility_caption: z.string(),
                edge_media_to_caption: z.object({
                  edges: z.array(
                    z.object({node: z.object({text: z.string()})}),
                  ),
                }),
                edge_media_to_comment: z.object({count: z.number()}),
                comments_disabled: z.boolean(),
                taken_at_timestamp: z.number(),
                edge_liked_by: z.object({count: z.number()}),
                edge_media_preview_like: z.object({count: z.number()}),
                location: z.object({
                  id: z.string(),
                  has_public_page: z.boolean(),
                  name: z.string(),
                  slug: z.string(),
                }),
                thumbnail_src: z.string(),
                thumbnail_resources: z.array(
                  z.object({
                    src: z.string(),
                    config_width: z.number(),
                    config_height: z.number(),
                  }),
                ),
                coauthor_producers: z.array(z.unknown()),
                edge_sidecar_to_children: z.object({
                  edges: z.array(
                    z.object({
                      node: z.object({
                        __typename: z.string(),
                        id: z.string(),
                        shortcode: z.string(),
                        dimensions: z.object({
                          height: z.number(),
                          width: z.number(),
                        }),
                        display_url: z.string(),
                        edge_media_to_tagged_user: z.object({
                          edges: z.array(z.unknown()),
                        }),
                        fact_check_overall_rating: z.null(),
                        fact_check_information: z.null(),
                        gating_info: z.null(),
                        sharing_friction_info: z.object({
                          should_have_sharing_friction: z.boolean(),
                          bloks_app_url: z.null(),
                        }),
                        media_overlay_info: z.null(),
                        media_preview: z.string(),
                        owner: z.object({
                          id: z.string(),
                          username: z.string(),
                        }),
                        is_video: z.boolean(),
                        has_upcoming_event: z.boolean(),
                        accessibility_caption: z.string(),
                      }),
                    }),
                  ),
                }),
              }),
            }),
          ]),
        ),
      }),
      edge_saved_media: z.object({
        count: z.number(),
        page_info: z.object({
          has_next_page: z.boolean(),
          end_cursor: z.null(),
        }),
        edges: z.array(z.unknown()),
      }),
      edge_media_collections: z.object({
        count: z.number(),
        page_info: z.object({
          has_next_page: z.boolean(),
          end_cursor: z.null(),
        }),
        edges: z.array(z.unknown()),
      }),
    }),
  }),
  toast_content_on_load: z.null(),
  show_view_shop: z.boolean(),
  profile_pic_edit_sync_props: z.object({
    show_change_profile_pic_confirm_dialog: z.boolean(),
    show_profile_pic_sync_reminders: z.boolean(),
    identity_id: z.string(),
    remove_profile_pic_header: z.null(),
    remove_profile_pic_subtext: z.null(),
    remove_profile_pic_confirm_cta: z.null(),
    remove_profile_pic_cancel_cta: z.null(),
    is_business_central_identity: z.boolean(),
    change_profile_pic_actions_screen_header: z.array(z.string()),
    change_profile_pic_actions_screen_subheader: z.null(),
    change_profile_pic_actions_screen_upload_cta: z.array(z.string()),
    change_profile_pic_actions_screen_remove_cta: z.array(z.string()),
    change_profile_pic_actions_screen_cancel_cta: z.array(z.string()),
    change_profile_pic_header: z.null(),
    change_profile_pic_subtext: z.null(),
  }),
  always_show_message_button_to_pro_account: z.boolean(),
})
